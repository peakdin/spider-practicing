#百度贴吧抓取楼主发帖内容，并保存文件
# -*- coding:utf-8 -*- 

import urllib.request

import re



class Tool:

	removeImg=re.compile('<img.*?>| {7}')#去除img标签，7位标签

	removeAddr=re.compile('<a.*?>|</a>')#删除超链接标签

	replaceLine=re.compile('<tr>|<div>|</div>|</p>')#将换行标签替换成\n

	replaceTD=re.compile('<td>')#将表格制表<td>替换成\t

	replacePara=re.compile('<p.*?>')#将段落开头换成\n加空两格

	replaceBR=re.compile('<br><br>|<br>')#将换行符或双换行符替换为\n

	removeExtraTag=re.compile('<.*>')#将其余标签剔除

	def replace(self,x):

		x=re.sub(self.removeImg,"",x)

		x=re.sub(self.removeAddr,"",x)

		x=re.sub(self.replaceLine,"\n",x)

		x=re.sub(self.replaceTD,"\t",x)

		x=re.sub(self.replacePara,"\n",x)

		x=re.sub(self.replaceBR,"\n",x)

		x=re.sub(self.removeExtraTag,"",x)

		return x.strip()



class BDTB:

	def __init__(self,baseUrl,seeLZ,tool):

		self.baseURL=baseUrl

		self.seeLZ='?see_lz='+str(seeLZ)

		self.tool=Tool()



	def getPage(self,pageNum):

		try:

			url=self.baseURL+self.seeLZ+'&pn'+str(pageNum)

			request=urllib.request.Request(url)

			response=urllib.request.urlopen(request)

			return response

		except urllib.request.URLError as e:

			if hasattre(e,'reason'):

				print (u'连接百度贴吧失败，错误原因', e.reason)

				return None



	def getTitle(self):

		page=self.getPage(1)

		pattern=re.compile('<h3.*?title.*?>(.*?)</h3>',re.S)

		page1=page.read().decode('ISO-8859-1')

		result=re.search(pattern,page1)

		if result:

			print(result.group(1))

		else:

			return None



	def getPageNum(self):

		page=self.getPage(1)

		pattern=re.compile('<li class="l_reply_num.*?>.*?</span>.*?<span.*?>(\d)</span>',re.S)

		page1=page.read().decode('utf-8')

		result=re.search(pattern,page1)

		if result:

			#print(result.group(1))  #测试输出

			return result.group(1).strip()

		else:

			return None



	def getContent(self):

		pageNum1=int(self.getPageNum())

		contents=[]

		for i in range(1,pageNum1):

			page=self.getPage(i)

			pattern=re.compile('<div.*?class="d_post_content.*?j_d_post_content.*?>(.*?)</div>',re.S)

			page1=page.read().decode('utf-8')

			items=re.findall(pattern,page1)	

			for item in items:

				print(item)

				content="\n"+self.tool.replace(item)+"\n"

				contents.append(content)


		if contents is None:

			print('contents is None')

		else:

			print(contents)

		return contents


	def writeData(self,contents):

		title=self.getTitle()

		if title is not None:

			title=title+'.txt'

			file=open(r'C:\Users\dingx\Desktop\title.txt',"a+")

		else:

			title='No_title.txt'

			file=open(r'C:\Users\dingx\Desktop\title.txt',"a+")

		floorLine='\n'+str('floor')+u"---------------------------------------------------------------\n"

		file.write(floorLine)

		for content in contents:

			if self.floorTag=='1':

				floor=1

				floorLine='\n'+str(floor)+u"---------------------------------------------------------------\n"

				file.write(floorLine)

				floor+=1

			file.write(content)

			floor+=1

	def start(self):

		indexPage=self.getPage(1)

		pageNum=self.getPageNum()

		title=self.getTitle()

		if pageNum==None:

			print('URL已失效，请重试')

			return

		try:

			print('该帖子共有'+str(pageNum)+'页')

			for i in range(1,int(pageNum)+1):

				print('正在写入第'+str(i)+'页数据')

				page=self.getPage(i)

				contents=self.getContent()

				self.writeData(contents)

		except IOError as e:

			print('写入异常，原因'+e.message)

		finally:

			print('写入任务完成')




print(u"请输入帖子代号")

baseURL = 'http://tieba.baidu.com/p/6131831832' 

seeLZ = input("是否只获取楼主发言，是输入1，否输入0\n")

floorTag = input("是否写入楼层信息，是输入1，否输入0\n")

bdtb = BDTB(baseURL,seeLZ,floorTag)

bdtb.start()

